{"remainingRequest":"E:\\weather-pwa\\node_modules\\babel-loader\\lib\\index.js!E:\\weather-pwa\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!E:\\weather-pwa\\src\\components\\WeatherApp.vue","dependencies":[{"path":"E:\\weather-pwa\\src\\components\\WeatherApp.vue","mtime":1678328524558},{"path":"E:\\weather-pwa\\package.json","mtime":1678328524558},{"path":"E:\\weather-pwa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678329659814},{"path":"E:\\weather-pwa\\node_modules\\babel-loader\\lib\\index.js","mtime":1678329660121},{"path":"E:\\weather-pwa\\node_modules\\vue-loader\\lib\\selector.js","mtime":1678329657410}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Weather from './Weather';\nimport Temperature from './Temperature';\nimport Measurements from './Measurements';\nimport WeatherForecast from '../services/WeatherForecast';\nexport default {\n  name: 'WeatherApp',\n  components: {\n    Weather: Weather,\n    Temperature: Temperature,\n    Measurements: Measurements\n  },\n  data: function data() {\n    return {\n      forecast: new WeatherForecast()\n    };\n  }\n};",{"version":3,"sources":["WeatherApp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AAEA;QAGA;;AAEA;AACA;AACA,AAEA;AALA;wBAMA;;oBAEA,AACA;AAFA;AAGA;AAbA","sourceRoot":"src\\components","sourcesContent":["<template>\r\n    <main>\r\n        <Measurements\r\n            :cloudiness=\"this.forecast.cloudiness\"\r\n            :windSpeed=\"this.forecast.windSpeed\"\r\n            :humidity=\"this.forecast.humidity\"\r\n        ></Measurements>\r\n\r\n        <Temperature\r\n            :value=\"this.forecast.temperatureValue\"\r\n            :high=\"this.forecast.temperatureHigh\"\r\n            :low=\"this.forecast.temperatureLow\"\r\n        ></Temperature>\r\n\r\n        <Weather\r\n            :location=\"this.forecast.location\"\r\n            :description=\"this.forecast.description\"\r\n            :icon=\"this.forecast.weatherIcon\"\r\n        ></Weather>\r\n    </main>\r\n</template>\r\n\r\n<script>\r\nimport Weather from './Weather'\r\nimport Temperature from './Temperature'\r\nimport Measurements from './Measurements'\r\nimport WeatherForecast from '../services/WeatherForecast'\r\n\r\nexport default {\r\n    name: 'WeatherApp',\r\n\r\n    components: {\r\n        Weather,\r\n        Temperature,\r\n        Measurements\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            forecast: new WeatherForecast\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nmain {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n\r\n    box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);\r\n}\r\n\r\n.app--day {\r\n    background-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)), url('../assets/images/morning.jpg');\r\n}\r\n\r\n.app--night {\r\n    background-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)), url('../assets/images/night.jpg');\r\n}\r\n\r\n@media screen and (min-width: 450px) {\r\n    main {\r\n        width: 330px;\r\n        height: 600px;\r\n\r\n        border-radius: 5px;\r\n    }\r\n}\r\n</style>\r\n"]}]}